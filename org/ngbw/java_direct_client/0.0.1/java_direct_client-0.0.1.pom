<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ngbw</groupId>
	<artifactId>java_direct_client</artifactId>
	<version>0.0.1</version>
	<packaging>bundle</packaging>

	<!-- Required by JavaFX maven plugin -->
	<organization>
		<name>Cipres</name>
	</organization>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.ngbw</groupId>
			<artifactId>restdatatypes</artifactId>
			<version>2.0</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>org.geppetto-mvn-repo</id>
			<url>https://raw.github.com/openworm/org.geppetto.maven/nsg</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
	</repositories>


	<build>
		<!-- <finalName>cipres_rest_client</finalName> -->
		<plugins>

			<!-- build a jar with all the dependent jars so it's easy to run from 
				command line -->
			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <version>2.4</version> 
				<executions> <execution> <id>jar-package</id> <phase>package</phase> <goals> 
				<goal>single</goal> </goals> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> </execution> </executions> </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
					<overWriteReleases>false</overWriteReleases>
					<overWriteSnapshots>false</overWriteSnapshots>
					<overWriteIfNewer>true</overWriteIfNewer>
				</configuration>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
				<executions> <execution> <id>copy-dependencies</id> <phase>prepare-package</phase> 
				<goals> <goal>copy-dependencies</goal> </goals> <configuration> <outputDirectory>${project.build.directory}/lib</outputDirectory> 
				<overWriteReleases>false</overWriteReleases> <overWriteSnapshots>false</overWriteSnapshots> 
				<overWriteIfNewer>true</overWriteIfNewer> </configuration> </execution> </executions> 
				</plugin> -->

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<!-- <inherited>true</inherited> -->
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>src/main/java/META-INF</manifestLocation>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						<Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
						<Include-Resource>
							{maven-resources}
						</Include-Resource>
						<!-- <Export-Package>*</Export-Package> -->
						<Import-Package>
							*
						</Import-Package>
						<Provide-Capability>osgi.ee;osgi.ee=JavaSE;version=1.7</Provide-Capability>
					</instructions>
				</configuration>
			</plugin>


			<!-- to run the program, enter "mvn exec:java" -->
			<!--<plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
				<version>1.2.1</version> <executions> <execution> <goals> <goal>java</goal> 
				</goals> </execution> </executions> <configuration> <mainClass>org.ngbw.directclient.example.Example</mainClass> 
				<classpathScope>test</classpathScope> </configuration> </plugin> <plugin> 
				<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
				<version>2.10.1</version> <configuration> <excludePackageNames>org.ngbw.directclient.example</excludePackageNames> 
				</configuration> <executions> <execution> <id>attach-javadocs</id> <goals> 
				<goal>jar</goal> </goals> </execution> </executions> </plugin> -->



		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
